name: Push built assets to a branch

on:
  workflow_call:
    inputs:
      branch:
        description: 'The branch to push the built assets to.'
        required: true
        type: string
      node:
        default: 18
        required: false
        type: number
      paths:
        description: 'The paths to push to the branch.'
        default: |
          build
          client/build
        required: false
        type: string

jobs:
  comment-on-pr:
    name: Comment on Pull Request if Built Assets are Pushed
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check if the user is attempting to push any file in the pull request that matches the paths
        shell: bash
        id: is-user-attempting-to-push-built-assets
        env:
          BUILD_PATHS: ${{ inputs.paths }}
        run: |
          # Split the command string into an array by newline allowing errors
          set +e
          IFS=$'\n' read -rd '' -a paths <<<"$BUILD_PATHS"
          set -e

          for build_path in "${paths[@]}"; do
            if git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} | grep -qE "$build_path"; then
              echo "is-user-attempting-to-push-built-assets=true" >> $GITHUB_OUTPUT
              exit 0
            fi
          done

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: PR contains built assets

      - name: Comment on PR
        uses: peter-evans/create-or-update-comment@v3
        if: steps.is-user-attempting-to-push-built-assets.outputs.is-user-attempting-to-push-built-assets == 'true' && steps.fc.outputs.comment-id == ''
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ⚠️ This PR contains built assets for the `${{ inputs.branch }}` branch. Built assets should not be pushed to the repository directly in pull requests. They will be automatically compiled and pushed to the branch when the pull request is merged.

  build-assets:
    name: Built assets for ${{ inputs.branch || 'branch' }}
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check if the plugin has front-end assets
        shell: bash
        id: has-node-assets
        run: |
          [[ -f package.json ]] && echo "exists=true" >> $GITHUB_OUTPUT || echo "exists=false" >> $GITHUB_OUTPUT

      - name: Setup Node
        if: steps.has-node-assets.outputs.exists == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node }}

      - name: Install node dependencies (npm ci)
        if: steps.has-node-assets.outputs.exists == 'true'
        run: npm install

      - name: Run npm build
        if: steps.has-node-assets.outputs.exists == 'true'
        run: npm run build

      - name: Add any of the paths if any of the paths to Git if they have changed
        if: steps.has-node-assets.outputs.exists == 'true'
        shell: bash
        env:
          BUILD_PATHS: ${{ inputs.paths }}
        run: |
          # Split the command string into an array by newline allowing errors
          set +e
          IFS=$'\n' read -rd '' -a paths <<<"$BUILD_PATHS"
          set -e

          for build_path in "${paths[@]}"; do
            if git diff --name-only HEAD^ HEAD | grep -qE "$build_path"; then
              echo "Adding $build_path"
              git add "$build_path"
            fi
          done

      - name: Push to branch
        shell: bash
        if: steps.has-node-assets.outputs.exists == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BUILT_BRANCH: '${{ inputs.branch }}'
        run: |
          if [[ -z $(git status -s) ]]; then
            echo "No changes to the output on this push; exiting."
            exit 0
          fi

          git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config --global user.name "$GITHUB_ACTOR"

          git ls-files -i -c --exclude-standard | xargs git rm --cached

          git checkout -b $BUILT_BRANCH

          git commit -m "Changes from $GITHUB_SHA"
          git push -u origin "${BUILT_BRANCH}"
