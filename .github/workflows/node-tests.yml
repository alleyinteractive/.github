name: Node Tests

on:
  workflow_call:
    inputs:
      node:
        default: 16
        required: false
        type: number
      ci:
        default: false
        required: false
        type: boolean
      cache:
        default: true
        required: false
        type: boolean
      run-audit:
        default: false
        required: false
        type: boolean
      run-test:
        default: true
        required: false
        type: boolean
      run-lint:
        default: true
        required: false
        type: boolean
      run-build:
        default: true
        required: false
        type: boolean

jobs:
  npm-ci:
    name: Install, build, and test
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs of this workflow (pull requests only)
        if: ${{ github.event_name == 'pull_request' }}
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check if the plugin has front-end assets
        shell: bash
        id: has-node-assets
        run: |
          [[ -f package.json ]] && echo "::set-output name=exists::true" || echo "::set-output name=exists::false"

      - name: Check if the plugin has a package-lock file
        shell: bash
        id: has-package-lock
        if: steps.has-node-assets.outputs.exists == 'true'
        run: |
          [[ -f package-lock.json ]] && echo "::set-output name=exists::true" || echo "::set-output name=exists::false"
          ls -al

      - name: Setup Node
        if: steps.has-node-assets.outputs.exists == 'true'
        uses: actions/setup-node@v3
        with:
          cache: ${{ inputs.cache && steps.has-package-lock.outputs.exist == 'true' && inputs.cache || '' }}
          node-version: ${{ inputs.node }}

      - name: Audit node
        if: steps.has-node-assets.outputs.exists == 'true' && inputs.run-audit
        run: npm audit --audit-level=high --production

      - name: Install node dependencies (npm install)
        if: steps.has-node-assets.outputs.exists == 'true' && ! inputs.ci
        run: npm install

      - name: Install node dependencies (npm ci)
        if: steps.has-node-assets.outputs.exists == 'true' && inputs.ci
        run: npm ci

      - name: Run npm test
        if: steps.has-node-assets.outputs.exists == 'true' && inputs.run-test
        run: npm run test

      - name: Run npm lint
        if: steps.has-node-assets.outputs.exists == 'true' && inputs.run-lint
        run: npm run lint

      - name: Run npm build
        if: steps.has-node-assets.outputs.exists == 'true' && inputs.run-build
        run: npm run build
