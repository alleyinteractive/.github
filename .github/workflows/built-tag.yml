name: Create a -built tag

on:
  workflow_call:
    inputs:
      php:
        default: "8.0"
        required: false
        type: string
      node:
        default: 16
        required: false
        type: number

jobs:
  built-tag:
    name: Create Built Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Clear previous vendor
        shell: bash
        run: rm -rf vendor && rm -rf composer.lock

      - name: Check if the plugin has front-end assets
        shell: bash
        id: has-node-assets
        run: |
          [[ -f package.json ]] && echo "exists=true" >> $GITHUB_OUTPUT || echo "exists=false" >> $GITHUB_OUTPUT

      - name: Install dependencies
        uses: php-actions/composer@v6
        with:
          php_version: ${{ inputs.php }}
          version: 2
          args: --prefer-dist --no-dev

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node }}

      - name: Install node dependencies (npm ci)
        if: steps.has-node-assets.outputs.exists == 'true'
        run: npm install

      - name: Run npm build
        if: steps.has-node-assets.outputs.exists == 'true'
        run: npm run build

      - name: Extract branch name
        shell: bash
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
        id: vars

      - name: Push to -built tag
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BUILT_BRANCH: '${{ steps.vars.outputs.tag }}-built'
          TAG_NAME: '${{ steps.vars.outputs.tag }}-built'
        run: |
          git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config --global user.name "$GITHUB_ACTOR"

          rm -rf .gitignore docker_tag output.log .github

          if [[ -e "$GITHUB_WORKSPACE/.deployignore" ]]; then
            mv .deployignore .gitignore
          elif [[ -e "$GITHUB_WORKSPACE/.distignore" ]]; then
            mv .distignore .gitignore
          fi

          git ls-files -i -c --exclude-standard | xargs git rm --cached

          git checkout -b $BUILT_BRANCH

          git add -A && git commit -m "Built changes for $TAG_NAME"

          git tag -a "$TAG_NAME" -m "Build assets for $TAG_NAME"
          git push origin "refs/tags/$TAG_NAME"
